{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { myColors } from \"./src/styles/Colors\";\nimport { ThemeContext } from \"./src/context/ThemeContext\";\nimport MyKeyboard from \"./src/components/MyKeyboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState('light'),\n    _useState2 = _slicedToArray(_useState, 2),\n    theme = _useState2[0],\n    setTheme = _useState2[1];\n  return _jsx(ThemeContext.Provider, {\n    value: theme,\n    children: _jsxs(SafeAreaView, {\n      style: theme === 'light' ? styles.container : [styles.container, {\n        backgroundColor: 'black'\n      }],\n      children: [_jsx(Switch, {\n        value: theme === 'dark',\n        onValueChange: function onValueChange() {\n          return setTheme(theme === 'light' ? 'dark' : 'light');\n        }\n      }), _jsx(MyKeyboard, {})]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: myColors.light,\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  }\n});","map":{"version":3,"names":["useState","SafeAreaView","StyleSheet","Switch","myColors","ThemeContext","MyKeyboard","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","theme","setTheme","Provider","value","children","style","styles","container","backgroundColor","onValueChange","create","flex","light","alignItems","justifyContent"],"sources":["C:/Users/ariel/OneDrive/Escritorio/Curso Fullstack Javascript/React_Native/Proyecto Final/ProyectoFinal_ReacNative_ArielAlvarado/App.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { SafeAreaView, StyleSheet, Switch, Text } from 'react-native';\nimport { myColors } from './src/styles/Colors';\nimport { ThemeContext } from './src/context/ThemeContext';\nimport MyKeyboard from './src/components/MyKeyboard';\n\n\n\nexport default function App() {\n  const [theme, setTheme] = useState('light');\n  return (\n    <ThemeContext.Provider value={theme}>\n      <SafeAreaView style={theme === 'light' ? styles.container : [styles.container, {backgroundColor: 'black'}]}>\n        <Switch\n          value={theme === 'dark'}\n          onValueChange={() => setTheme(theme === 'light' ? 'dark' : 'light')}\n        />\n        <MyKeyboard />\n      </SafeAreaView>\n    </ThemeContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: myColors.light,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n});\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAEjC,SAASC,QAAQ;AACjB,SAASC,YAAY;AACrB,OAAOC,UAAU;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIrD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAA0BZ,QAAQ,CAAC,OAAO,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,OACEL,IAAA,CAACH,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAEH,KAAM;IAAAI,QAAA,EAClCT,KAAA,CAACT,YAAY;MAACmB,KAAK,EAAEL,KAAK,KAAK,OAAO,GAAGM,MAAM,CAACC,SAAS,GAAG,CAACD,MAAM,CAACC,SAAS,EAAE;QAACC,eAAe,EAAE;MAAO,CAAC,CAAE;MAAAJ,QAAA,GACzGX,IAAA,CAACL,MAAM;QACLe,KAAK,EAAEH,KAAK,KAAK,MAAO;QACxBS,aAAa,EAAE,SAAAA,cAAA;UAAA,OAAMR,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;QAAA;MAAC,CACrE,CAAC,EACFP,IAAA,CAACF,UAAU,IAAE,CAAC;IAAA,CACF;EAAC,CACM,CAAC;AAE5B;AAEA,IAAMe,MAAM,GAAGnB,UAAU,CAACuB,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPH,eAAe,EAAEnB,QAAQ,CAACuB,KAAK;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}