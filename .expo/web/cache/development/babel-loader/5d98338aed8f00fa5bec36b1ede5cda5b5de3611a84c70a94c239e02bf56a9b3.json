{"ast":null,"code":"import { useContext } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { Styles } from \"../styles/GlobalStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Button(_ref) {\n  var title = _ref.title,\n    onPress = _ref.onPress,\n    isGray = _ref.isGray;\n  var theme = useContext(ThemeContext);\n  return _jsx(TouchableOpacity, {\n    style: isBlue ? Styles.btnBlue : isGray ? Styles.btnGray : theme === \"light\" ? Styles.btnLight : Styles.btnDark,\n    onPress: onPress,\n    children: _jsx(Text, {\n      style: isBlue || isGray ? Styles.smallTextLight : theme === \"dark\" ? Styles.smallTextLight : Styles.smallTextDark,\n      children: title\n    })\n  });\n}","map":{"version":3,"names":["useContext","TouchableOpacity","Text","ThemeContext","Styles","jsx","_jsx","Button","_ref","title","onPress","isGray","theme","style","isBlue","btnBlue","btnGray","btnLight","btnDark","children","smallTextLight","smallTextDark"],"sources":["C:/Users/ariel/OneDrive/Escritorio/Curso Fullstack Javascript/React_Native/Proyecto Final/ProyectoFinal_ReacNative_ArielAlvarado/src/components/Button.tsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { TouchableOpacity, Text } from \"react-native\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { Styles } from \"../styles/GlobalStyles\";\n\ninterface ButtonProps {\n    onPress: () => void;\n    title: string;\n    \n}\n\nexport default function Button({ title, onPress, isGray }: ButtonProps) {\n    const theme = useContext(ThemeContext);\n    return (\n        <TouchableOpacity \n            style={\n                isBlue \n                ? Styles.btnBlue \n                : isGray \n                ? Styles.btnGray \n                : theme === \"light\" \n                ? Styles.btnLight \n                : Styles.btnDark\n            } \n            onPress={onPress}>\n            <Text \n               style={\n                   isBlue || isGray \n                   ? Styles.smallTextLight\n                   : theme === \"dark\" \n                   ? Styles.smallTextLight \n                   : Styles.smallTextDark \n                }\n            >\n                {title}\n            </Text>\n        </TouchableOpacity>\n    );\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAEnC,SAASC,YAAY;AACrB,SAASC,MAAM;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAQhD,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAA0C;EAAA,IAAvCC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAEC,MAAM,GAAAH,IAAA,CAANG,MAAM;EACnD,IAAMC,KAAK,GAAGZ,UAAU,CAACG,YAAY,CAAC;EACtC,OACIG,IAAA,CAACL,gBAAgB;IACbY,KAAK,EACDC,MAAM,GACJV,MAAM,CAACW,OAAO,GACdJ,MAAM,GACNP,MAAM,CAACY,OAAO,GACdJ,KAAK,KAAK,OAAO,GACjBR,MAAM,CAACa,QAAQ,GACfb,MAAM,CAACc,OACZ;IACDR,OAAO,EAAEA,OAAQ;IAAAS,QAAA,EACjBb,IAAA,CAACJ,IAAI;MACFW,KAAK,EACDC,MAAM,IAAIH,MAAM,GACdP,MAAM,CAACgB,cAAc,GACrBR,KAAK,KAAK,MAAM,GAChBR,MAAM,CAACgB,cAAc,GACrBhB,MAAM,CAACiB,aACX;MAAAF,QAAA,EAEAV;IAAK,CACJ;EAAC,CACO,CAAC;AAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}